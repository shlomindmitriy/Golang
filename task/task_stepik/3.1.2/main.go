package main

import (
	"fmt"
)

/*
В ходе анализа результатов переписи населения информация была сохранена в объекте типа map:
groupCity := map[int][]string{
	10:   []string{...}, // города с населением 10-99 тыс. человек
	100:  []string{...}, // города с населением 100-999 тыс. человек
	1000: []string{...}, // города с населением 1000 тыс. человек и более
}
При подготовке важного отчета о городах с населением 100-999 тыс. человек был подготовлен другой объект типа map:

cityPopulation := map[string]int{
	город: население города в тысячах человек,
}
Однако база данных с информацией о точной численности населения содержала ошибки, поэтому в cityPopulation в т.ч. была сохранена информация о городах, которые входят в другие группы из groupCity.
Ваша программа имеет доступ к обоим указанным отображениям, требуется исправить cityPopulation, чтобы в ней была сохранена информация только о городах из группы groupCity[100].
Функция main() уже объявлена, доступ к отображениям осуществляется по указанным именам. По результатам выполнения ничего больше делать не требуется, проверка будет осуществлена автоматически.

*/

func main() {
	groupCity := map[int][]string{
		10:   []string{"Унеча", "Трубчевск", "Погар"}, // города с населением 10-99 тыс. человек
		100:  []string{"Брянск", "Клинцы"},            // города с населением 100-999 тыс. человек
		200:  []string{"Новозыбков", "Красноярск"},
		1000: []string{"Москва", "Питер", "Омск"}, // города с населением 1000 тыс. человек и более
	}

	cityPopulation := map[string]int{
		"Унеча":      10,
		"Город":      100,
		"Брянск":     101,
		"Клинцы":     102,
		"Мегаполис":  103,
		"Новозыбков": 200,
		"Красноярск": 202,
	}

	// c := groupCity[100]
	// c = append(c, groupCity[200]...)

	// for key, _ := range cityPopulation {

	// 	var flag bool = false

	// 	for _, v := range c {
	// 		if v == key  {
	// 			flag = true
	// 		}

	// 	}
	// 	if flag == false {
	// 		delete(cityPopulation, key)
	// 	}
	// }
	// fmt.Println(cityPopulation)
	

	for i, v := range cityPopulation {
		var flag bool = false

		for i, _ := range groupCity[100] {
			if v > i && v >150 {
				flag = true
			}
			
		}
		if flag == false {
			delete(cityPopulation ,i)
		}
	}
	fmt.Println(cityPopulation)
}
